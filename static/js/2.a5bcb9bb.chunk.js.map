{"version":3,"file":"static/js/2.a5bcb9bb.chunk.js","mappings":"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","sources":["components/section/section.styled.jsx","components/section/section.js","components/contactForm/contactForm.styled.jsx","components/contactForm/contactForm.js","components/contactList/contactList.styled.jsx","components/contactItem/contactItem.js","components/contactList/contactList.js","ViewPages/ContactsPage/ContactsPage.styled.jsx","components/filter/filter.styled.jsx","components/filter/filter.js","ViewPages/ContactsPage/ContactsPage.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const SectionWrap = styled.div`\n\tmargin: 10px;\n\twidth: 320px;\n`;\nexport const Title = styled.h2`\n\tcolor: #90caf9;\n`;\n","import React from 'react';\nimport { SectionWrap, Title } from './section.styled';\nimport PropTypes from 'prop-types';\n\nfunction Section({ title, children }) {\n\treturn (\n\t\t<SectionWrap>\n\t\t\t<Title>{title}</Title>\n\t\t\t{children}\n\t\t</SectionWrap>\n\t);\n}\n\nexport default Section;\n\nSection.propTypes = {\n\ttitle: PropTypes.string.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const FormWrap = styled.form`\n\tmargin: 10px;\n\tpadding: 20px;\n\twidth: 300px;\n\tdisplay: inline-flex;\n\tflex-direction: column;\n\tbackground-color: #161b22;\n\tbox-shadow: 4px 4px 8px 8px rgba(91, 128, 160, 0.2);\n`;\nexport const Labels = styled.label`\n\tmargin-bottom: 10px;\n\tjustify-content: space-between;\n\twidth: 100%;\n\tdisplay: flex;\n\tcolor: #90caf9;\n`;\n\nexport const InputArea = styled.input`\n\tbackground-color: #0d1117;\n\tcolor: #90caf9;\n\tborder: 1px solid #5b80a0;\n\t&:hover {\n\t\tcolor: #5b80a0;\n\t\tborder-radius: 5px;\n\t}\n`;\n\nexport const BtnAddContact = styled.button`\n\tdisplay: inline-flex;\n\tmargin: 10px 0;\n\n\tjustify-content: center;\n\talign-items: base;\n\n\twidth: 100%;\n\theight: 30px;\n\tcolor: #90caf9;\n\tbackground-color: #0d1117;\n\n\tfont-size: 20px;\n\tfont-weight: 700;\n\ttext-decoration: none;\n\n\ttransition: 200ms linear;\n\tborder: 2px solid #90caf9;\n\n\t&:hover {\n\t\tcolor: #5b80a0;\n\t\tborder-radius: 10px;\n\t}\n`;\n","import React from 'react';\nimport {\n\tFormWrap,\n\tLabels,\n\tInputArea,\n\tBtnAddContact,\n} from './contactForm.styled';\nimport PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport toast from 'react-hot-toast';\nimport { useAddContactDataMutation } from 'redux/Contacts/ContactsSlice';\n\nfunction ContactForm({ filterContact }) {\n\tconst [name, setName] = useState('');\n\tconst [number, setNumber] = useState('');\n\tconst [addContactData] = useAddContactDataMutation();\n\n\tfunction handleDataInput(e) {\n\t\tconst { name, value } = e.target;\n\t\tswitch (name) {\n\t\t\tcase 'name':\n\t\t\t\tsetName(value);\n\t\t\t\tbreak;\n\t\t\tcase 'number':\n\t\t\t\tsetNumber(value);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tfunction addContact(e) {\n\t\te.preventDefault();\n\n\t\tfilterContact?.find(\n\t\t\tcontact => contact.name.toLowerCase() === name.toLowerCase()\n\t\t)\n\t\t\t? toast.error(`${name} is already in contacts`)\n\t\t\t: addContactData({ name, number });\n\n\t\tsetName('');\n\t\tsetNumber('');\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<FormWrap onSubmit={addContact}>\n\t\t\t\t<Labels htmlFor=\"name\">\n\t\t\t\t\tName:\n\t\t\t\t\t<InputArea\n\t\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tvalue={name}\n\t\t\t\t\t\tonChange={handleDataInput}\n\t\t\t\t\t\tname=\"name\"\n\t\t\t\t\t\tplaceholder=\"Type NEW contact name\"\n\t\t\t\t\t\tpattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n\t\t\t\t\t\ttitle=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n\t\t\t\t\t\trequired\n\t\t\t\t\t/>\n\t\t\t\t</Labels>\n\t\t\t\t<Labels htmlFor=\"number\">\n\t\t\t\t\tPhone number:\n\t\t\t\t\t<InputArea\n\t\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\t\ttype=\"tel\"\n\t\t\t\t\t\tvalue={number}\n\t\t\t\t\t\tonChange={handleDataInput}\n\t\t\t\t\t\tplaceholder=\"Type contact phone\"\n\t\t\t\t\t\tname=\"number\"\n\t\t\t\t\t\tpattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n\t\t\t\t\t\ttitle=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n\t\t\t\t\t\trequired\n\t\t\t\t\t/>\n\t\t\t\t</Labels>\n\t\t\t\t<BtnAddContact type=\"submit\">Add contact</BtnAddContact>\n\t\t\t</FormWrap>\n\t\t</>\n\t);\n}\n\nexport default ContactForm;\n\nContactForm.propTypes = {\n\tvalue: PropTypes.string,\n\tonChange: PropTypes.func,\n};\n","import styled from '@emotion/styled';\n\nexport const Elements = styled.li`\n\tmargin: 0 auto 10px;\n\tpadding: 10px;\n\twidth: 280px;\n\tdisplay: inline-flex;\n\talign-items: center;\n\tjustify-content: space-between;\n\tbackground-color: #161b22;\n\tbox-shadow: 2px 2px 2px 3px rgba(91, 128, 160, 0.2);\n`;\nexport const Buttons = styled.button`\n\tdisplay: inline-flex;\n\tmargin: 5px 0;\n\n\tjustify-content: center;\n\talign-items: center;\n\n\twidth: 20%;\n\theight: 20px;\n\tcolor: #90caf9;\n\tbackground-color: #0d1117;\n\n\tfont-size: 12px;\n\tfont-weight: 400;\n\ttext-decoration: none;\n\n\ttransition: 200ms linear;\n\tborder: 2px solid #90caf9;\n\n\t&:hover {\n\t\tcolor: #5b80a0;\n\t\tborder-radius: 5px;\n\t}\n`;\nexport const Text = styled.span`\n\tmargin: 0;\n\twidth: 70%;\n`;\n","import { Elements, Buttons, Text } from '../contactList/contactList.styled';\nimport { useDeleteContactMutation } from 'redux/Contacts/ContactsSlice';\n\nfunction ContactListItem({ id, name, number }) {\n\tconst [deleteContact, { isLoading: isDeleting }] =\n\t\tuseDeleteContactMutation();\n\n\treturn (\n\t\t<Elements key={id}>\n\t\t\t<Text>\n\t\t\t\t{name} : {number}\n\t\t\t</Text>\n\t\t\t<Buttons onClick={() => deleteContact(id)} disabled={isDeleting}>\n\t\t\t\t{isDeleting ? 'deleting...' : 'Delete'}\n\t\t\t</Buttons>\n\t\t</Elements>\n\t);\n}\n\nexport default ContactListItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Text } from './contactList.styled';\nimport ContactListItem from '../contactItem/contactItem';\n\nfunction ContactList({ contList }) {\n\tif (contList) {\n\t\treturn contList.map(contact => {\n\t\t\treturn <ContactListItem key={contact.id} {...contact} />;\n\t\t});\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<Text>Loading....</Text>\n\t\t</>\n\t);\n}\n\nexport default ContactList;\n\nContactList.propTypes = {\n\tkey: PropTypes.string,\n\tonClick: PropTypes.func,\n};\n","import styled from '@emotion/styled';\n\n// export const Wrap = styled.div`\n// \tdisplay: flex;\n// \tjustify-content: center;\n\n// \tpadding: 30px;\n// \tmargin: 20px;\n\n// \twidth: 80%;\n// \tcolor: #90caf9;\n// \tlist-style-type: none;\n\n// \tborder: 1px solid red;\n\n// \tbox-shadow: 4px 4px 8px 8px rgba(34, 60, 80, 0.2);\n// `;\n\nexport const Wrap = styled.div`\n\tdisplay: flex;\n\tflex-direction: row;\n\tjustify-content: space-around;\n\twidth: 90%;\n\tborder-radius: 10px;\n`;\n\nexport const List = styled.ul`\n\tmargin-left: 10px;\n\tpadding: 10px;\n\twidth: 300px;\n\tcolor: #90caf9;\n\tlist-style-type: none;\n\n\tbox-shadow: 4px 4px 8px 8px rgba(34, 60, 80, 0.2);\n`;\n\nexport const Text = styled.span`\n\tcolor: #90caf9;\n\tdisplay: inline-flex;\n\talign-items: center;\n\tfont-size: 30px;\n\tfont-weight: 500;\n`;\n","import styled from '@emotion/styled';\n\nexport const FilterLabel = styled.li`\n\tmargin: 0 10px 10px 10px;\n\tpadding: 10px;\n\twidth: 300px;\n\tdisplay: inline-flex;\n\tjustify-content: space-between;\n\talign-items: center;\n\tlist-style-type: none;\n\tbackground-color: #161b22;\n\n\tbox-shadow: 2px 2px 2px 2px rgba(91, 128, 160, 0.2);\n`;\nexport const FilterInput = styled.input`\n\tbackground-color: #0d1117;\n\tcolor: #90caf9;\n\tborder: 1px solid #5b80a0;\n\t&:hover {\n\t\tcolor: #5b80a0;\n\t\tborder-radius: 5px;\n\t}\n`;\nexport const Text = styled.span`\n\tmargin: 0;\n\twidth: 70%;\n\tcolor: #90caf9;\n`;\n","import React from 'react';\nimport { FilterLabel, FilterInput, Text } from './filter.styled';\nimport PropTypes from 'prop-types';\n\nfunction Filter({ filterValue, onChange }) {\n\treturn (\n\t\t<FilterLabel htmlFor=\"filter\">\n\t\t\t<Text>Find name</Text>\n\t\t\t<FilterInput\n\t\t\t\ttype=\"text\"\n\t\t\t\tname=\"filter\"\n\t\t\t\tplaceholder=\"Search contact\"\n\t\t\t\tonChange={onChange}\n\t\t\t\tvalue={filterValue}\n\t\t\t></FilterInput>\n\t\t</FilterLabel>\n\t);\n}\n\nexport default Filter;\n\nFilter.propTypes = {\n\tonChange: PropTypes.func,\n\tvalue: PropTypes.string,\n};\n","import Section from 'components/section/section';\nimport ContactForm from 'components/contactForm/contactForm';\nimport ContactList from 'components/contactList/contactList';\nimport { List, Wrap, Text } from 'ViewPages/ContactsPage/ContactsPage.styled';\nimport Filter from 'components/filter/filter';\nimport { useState } from 'react';\nimport { Toaster } from 'react-hot-toast';\nimport { useFetchContactsQuery } from 'redux/Contacts/ContactsSlice';\n\nexport default function ContactsPage() {\n\tconst [filterValue, setfilterValue] = useState('');\n\n\tconst { data: contacts, error } = useFetchContactsQuery([]);\n\n\tconst normalizeFilter = filterValue.toLowerCase();\n\tconst filterCurrentName = contacts?.filter(contact =>\n\t\tcontact.name.toLowerCase().includes(normalizeFilter)\n\t);\n\n\tconst onFilter = e => {\n\t\tsetfilterValue(e.target.value);\n\t};\n\n\treturn (\n\t\t<Wrap>\n\t\t\t<Section title=\"Phonebook\">\n\t\t\t\t<ContactForm filterContact={filterCurrentName} />\n\t\t\t</Section>\n\t\t\t{contacts?.length === 0 || error ? (\n\t\t\t\t<Text>No contacts yet</Text>\n\t\t\t) : (\n\t\t\t\t<Section title=\"Contacts\">\n\t\t\t\t\t<Filter filterValue={filterValue} onChange={onFilter} />\n\t\t\t\t\t<List>\n\t\t\t\t\t\t<ContactList contList={filterCurrentName} />\n\t\t\t\t\t</List>\n\t\t\t\t</Section>\n\t\t\t)}\n\t\t\t<Toaster />\n\t\t</Wrap>\n\t);\n}\n"],"names":["SectionWrap","styled","Title","title","children","FormWrap","Labels","InputArea","BtnAddContact","filterContact","useState","name","setName","number","setNumber","useAddContactDataMutation","addContactData","handleDataInput","e","target","value","onSubmit","preventDefault","find","contact","toLowerCase","toast","htmlFor","autoComplete","type","onChange","placeholder","pattern","required","Elements","Buttons","Text","id","useDeleteContactMutation","deleteContact","isDeleting","isLoading","onClick","disabled","contList","map","Wrap","List","FilterLabel","FilterInput","filterValue","ContactsPage","setfilterValue","useFetchContactsQuery","contacts","data","error","normalizeFilter","filterCurrentName","filter","includes","length"],"sourceRoot":""}